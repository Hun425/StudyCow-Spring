pipeline {
    agent any
    
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        DOCKER_IMAGE = "sioe9/studycow:{BUILD_NUMBER}"
        EC2_INSTANCE = "i11C202.p.ssafy.io"
        EC2_USER = "ubuntu"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://lab.ssafy.com/-/ide/project/s11-webmobile1-sub2/S11P12C202/',
                        credentialsId: 'gitlab-credentials'
                    ]]
                ])
            }
        }
        
        stage('Build') {
            steps {
                cd studycow
                sh 'npm install'
                sh 'npm run build'
            }
        }
        
        stage('Test') {
            steps {
                sh 'npm test'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}")
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://your-docker-registry', 'docker-credentials-id') {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }
        
        stage('Deploy to EC2') {
            steps {
                sshagent(credentials: ['ec2-ssh-key']) {
                    sh """
                        ssh ${EC2_USER}@${EC2_INSTANCE} '
                        sudo docker pull ${DOCKER_IMAGE}
                        sudo docker stop my-app || true
                        sudo docker rm my-app || true
                        sudo docker run -d --name my-app -p 80:3000 ${DOCKER_IMAGE}
                        '
                    """
                }
            }
        }
    }
    
    post {
        success {
            updateGitlabCommitStatus name: 'build', state: 'success'
        }
        failure {
            updateGitlabCommitStatus name: 'build', state: 'failed'
        }
    }
}
