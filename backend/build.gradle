plugins {
	id 'java'
	id 'idea'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ssafy'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


	implementation 'commons-io:commons-io:2.6'
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'org.apache.commons:commons-lang3:3.9'
	implementation "com.squareup.retrofit2:retrofit:2.7.1"
	implementation "com.squareup.retrofit2:converter-jackson:2.7.1"
	implementation "com.squareup.okhttp3:logging-interceptor:3.9.0"
	implementation "com.google.guava:guava:29.0-jre"
	annotationProcessor "com.google.guava:guava:29.0-jre"
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation "com.auth0:java-jwt:3.10.3"
	implementation "org.projectlombok:lombok:1.18.20"
	annotationProcessor "org.projectlombok:lombok:1.18.20"

	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//ModelMapper
	implementation 'org.modelmapper:modelmapper:3.0.0'
	implementation 'org.modelmapper:modelmapper-module-jsr310:1.2.3'

	// STOMP 웹 소켓 서버 사이드 테스트 (SSR)
	implementation 'org.springframework.boot:spring-boot-starter-mustache'

	// STOMP 관련 프론트 라이브러리
	implementation 'org.webjars.bower:jquery:3.3.1'
	implementation 'org.webjars:sockjs-client:1.1.2'
	implementation 'org.webjars:stomp-websocket:2.3.3-1'
	implementation 'org.webjars:webjars-locator:0.30'

	// WebRTC 클라이언트 의존성
	implementation 'org.webjars.bower:webrtc-adapter:7.4.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Kurento (미디어서버)
	implementation 'org.kurento:kurento-client:6.16.0'
	implementation 'org.kurento:kurento-utils-js:6.15.0'

	//Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

	// SpringBoot Validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.1'



	// Spring Security Test 모듈
	testImplementation 'org.springframework.security:spring-security-test'

	// 테스트 시, H2 DB 사용
	testImplementation 'com.h2database:h2:2.2.224'




}

idea {
	module {
		sourceDirs += file("build/generated/sources/annotationProcessor/java/main")
		generatedSourceDirs += file("build/generated/sources/annotationProcessor/java/main")
	}
}


test {
	useJUnitPlatform()
}

// Spring 3.xx 버전 QueryDSL 설정
def querydslSrcDir = "$projectDir/build/generated/querydsl"
// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(querydslSrcDir)
}
// `src/main/generated 패키지에 QClass를 직접 추가
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
	options.annotationProcessorPath = configurations.annotationProcessor
}


